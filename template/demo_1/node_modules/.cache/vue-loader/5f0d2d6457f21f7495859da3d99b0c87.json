{"remainingRequest":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/purple-free-vue/template/demo_1/src/components/apps/Kanban.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/src/components/apps/Kanban.vue","mtime":1605587475570},{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkcmFndWxhIGZyb20gJ2RyYWd1bGEnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0thbmJhbkJvYXJkJywKICBwcm9wczogewogICAgc3RhZ2VzOiB7fSwKICAgIGJsb2Nrczoge30sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgbG9jYWxCbG9ja3MoKSB7CiAgICAgIHJldHVybiB0aGlzLmJsb2NrczsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRCbG9ja3Moc3RhdHVzKSB7CiAgICAgIHJldHVybiB0aGlzLmxvY2FsQmxvY2tzLmZpbHRlcihibG9jayA9PiBibG9jay5zdGF0dXMgPT09IHN0YXR1cyk7CiAgICB9LAogIH0sCnVwZGF0ZWQoKSB7CiAgdGhpcy5kcmFrZS5jb250YWluZXJzID0gdGhpcy4kcmVmcy5saXN0Owp9LAptb3VudGVkKCkgewogIHRoaXMuZHJha2UgPSBkcmFndWxhKHRoaXMuJHJlZnMubGlzdCkKICAgIC5vbignZHJhZycsIChlbCkgPT4gewogICAgICBlbC5jbGFzc0xpc3QuYWRkKCdpcy1tb3ZpbmcnKTsKICAgIH0pCiAgICAub24oJ2Ryb3AnLCAoYmxvY2ssIGxpc3QpID0+IHsKICAgICAgbGV0IGluZGV4ID0gMDsKICAgICAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgbGlzdC5jaGlsZHJlbi5sZW5ndGg7IGluZGV4ICs9IDEpIHsKICAgICAgICBpZiAobGlzdC5jaGlsZHJlbltpbmRleF0uY2xhc3NMaXN0LmNvbnRhaW5zKCdpcy1tb3ZpbmcnKSkgYnJlYWs7CiAgICAgIH0KICAgICAgdGhpcy4kZW1pdCgndXBkYXRlLWJsb2NrJywgYmxvY2suZGF0YXNldC5ibG9ja0lkLCBsaXN0LmRhdGFzZXQuc3RhdHVzLCBpbmRleCk7CiAgICB9KQogICAgLm9uKCdkcmFnZW5kJywgKGVsKSA9PiB7CiAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoJ2lzLW1vdmluZycpOwogICAgICB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgZWwuY2xhc3NMaXN0LmFkZCgnaXMtbW92ZWQnKTsKICAgICAgICB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKCdpcy1tb3ZlZCcpOwogICAgICAgIH0sIDYwMCk7CiAgICAgIH0sIDEwMCk7CiAgICB9KTsKfQp9Owo="},{"version":3,"sources":["Kanban.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Kanban.vue","sourceRoot":"src/components/apps","sourcesContent":["<template>\n  <div class=\"drag-container\">\n    <ul class=\"drag-list\">\n      <li v-for=\"stage in stages\" class=\"drag-column board-portlet\" :class=\"{['drag-column-' + stage]: true}\" :key=\"stage\">\n        <span class=\"drag-column-header\">\n          <slot :name=\"stage\">\n            <h2>{{ stage }}</h2>\n          </slot>\n        </span>\n        <div class=\"drag-options\"></div>\n        <ul class=\"drag-inner-list portlet-card-list\" ref=\"list\" :data-status=\"stage\">\n          <li class=\"drag-item portlet-card\" v-for=\"block in getBlocks(stage)\" :data-block-id=\"block.id\" :key=\"block.id\">\n            <slot :name=\"block.id\">\n              <strong>{{ block.status }}</strong>\n              <div>{{ block.id }}</div>\n            </slot>\n          </li>\n        </ul>\n        <div class=\"drag-column-footer add-portlet\">\n            <slot :name=\"`footer-${stage}`\"></slot>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  import dragula from 'dragula';\n  export default {\n    name: 'KanbanBoard',\n    props: {\n      stages: {},\n      blocks: {},\n    },\n    data() {\n      return {\n      };\n    },\n    computed: {\n      localBlocks() {\n        return this.blocks;\n      },\n    },\n    methods: {\n      getBlocks(status) {\n        return this.localBlocks.filter(block => block.status === status);\n      },\n    },\n  updated() {\n    this.drake.containers = this.$refs.list;\n  },\n  mounted() {\n    this.drake = dragula(this.$refs.list)\n      .on('drag', (el) => {\n        el.classList.add('is-moving');\n      })\n      .on('drop', (block, list) => {\n        let index = 0;\n        for (index = 0; index < list.children.length; index += 1) {\n          if (list.children[index].classList.contains('is-moving')) break;\n        }\n        this.$emit('update-block', block.dataset.blockId, list.dataset.status, index);\n      })\n      .on('dragend', (el) => {\n        el.classList.remove('is-moving');\n        window.setTimeout(() => {\n          el.classList.add('is-moved');\n          window.setTimeout(() => {\n            el.classList.remove('is-moved');\n          }, 600);\n        }, 100);\n      });\n  }\n  };\n</script>"]}]}