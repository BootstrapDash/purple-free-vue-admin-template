{"remainingRequest":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/purple-free-vue/template/demo_1/src/pages/samples/general-pages/profile.vue?vue&type=template&id=67dcd142&","dependencies":[{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/src/pages/samples/general-pages/profile.vue","mtime":1605587475624},{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/purple-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}